---
- name: Update apt cache
  apt:
    update_cache: true
    cache_valid_time: 3600
  become: true

- name: Install required packages
  apt:
    name:
      - curl
      - git
      - apache2
    state: present
  become: true

- name: Ensure apache2 service is properly configured
  shell: |
    mkdir -p /var/run/apache2
    chown www-data:www-data /var/run/apache2
  become: true
  notify:
    - restart apache2

- name: enable mod_rewrite
  apache2_module:
    name: rewrite
    state: present
  become: true
  notify:
    - restart apache2

- name: Install Node.js
  shell: |
    curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash -
    apt-get install -y nodejs
  args:
    creates: /usr/bin/node
  become: true

- name: Install application dependencies
  shell: |
    cd /var/www/todolist
    npm install
  become: true
  become_user: "{{ ansible_user }}"

- name: Update database configuration
  template:
    src: database.js.j2
    dest: /var/www/todolist/src/config/database.js
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0644'
  become: true

- name: Configure Apache to proxy requests to Node.js
  template:
    src: todolist.conf.j2
    dest: /etc/apache2/sites-available/todolist.conf
    owner: root
    group: root
    mode: '0644'
  become: true

- name: Enable Apache modules
  apache2_module:
    name: "{{ item }}"
    state: present
  with_items:
    - proxy
    - proxy_http
    - proxy_balancer
    - lbmethod_byrequests
  become: true
  notify:
    - restart apache2

- name: Enable todolist site
  command: a2ensite todolist.conf
  become: true
  notify:
    - restart apache2

- name: Disable default Apache site
  command: a2dissite 000-default.conf
  become: true
  ignore_errors: true
  notify:
    - restart apache2

- name: Ensure Apache is restarted
  shell: service apache2 restart
  become: true

- name: Start Node.js application
  shell: |
    cd /var/www/todolist
    (npm run dev&)
  become: true

# Obtenir l'adresse IP du serveur de base de donn√©es
- name: Get DB server IP
  shell: getent hosts db_server | awk '{ print $1 }'
  register: db_server_ip
  ignore_errors: true

- name: Display DB server IP
  debug:
    var: db_server_ip.stdout

- name: Install network tools
  apt:
    name:
      - netcat-openbsd
      - net-tools
      - postgresql-client
    state: present
  become: true

- name: Test connection to PostgreSQL
  shell: |
    echo "Testing connection to PostgreSQL..."
    echo "Hostname resolution:"
    getent hosts db_server
    echo "Connection test:"
    nc -zv db_server 5432 || echo "Connection failed"
  register: connection_test
  become: true
  ignore_errors: true

- name: Display connection test results
  debug:
    var: connection_test.stdout_lines

# - name: Run database migration using psql
#   shell: |
#     cd /var/www/todolist
#     PGPASSWORD={{ db_password }} psql -h db_server -U {{ db_user }} -d {{ db_name }} -c "SELECT 1;"
#     if [ $? -eq 0 ]; then
#       echo "Connection to PostgreSQL successful, running migration..."
#       npx sequelize-cli db:migrate
#     else
#       echo "Connection to PostgreSQL failed, cannot run migration."
#     fi
#   become: true
#   become_user: "{{ ansible_user }}"
#   ignore_errors: true

- name: Check if Node.js application is running
  shell: |
    curl -s http://localhost:3333/test || echo "Application not responding"
  register: app_check
  become: true
  ignore_errors: true
