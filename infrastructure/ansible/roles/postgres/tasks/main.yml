---
- name: "Find out if PostgreSQL is initialized"
  ansible.builtin.stat:
    path: "/etc/postgresql/{{ postgresql_version | default('16') }}/main/pg_hba.conf"
  register: postgres_data

- name: "Initialize PostgreSQL (Debian/Ubuntu)"
  shell: "pg_createcluster {{ postgresql_version | default('16') }} main start"
  when: not postgres_data.stat.exists

- name: "Start PostgreSQL service"
  shell: "service postgresql start"
  become: true

- name: "Enable PostgreSQL service"
  shell: "systemctl enable postgresql"
  become: true
  ignore_errors: true

- name: "Create app database"
  command: sudo -u postgres psql -c "CREATE DATABASE {{ db_name }};"
  register: create_db_result
  failed_when: create_db_result.rc != 0 and "already exists" not in create_db_result.stderr
  changed_when: create_db_result.rc == 0

- name: "Create db user"
  command: sudo -u postgres psql -c "CREATE USER {{ db_user }} WITH SUPERUSER PASSWORD '{{ db_password }}';"
  register: create_user_result
  failed_when: create_user_result.rc != 0 and "already exists" not in create_user_result.stderr
  changed_when: create_user_result.rc == 0

- name: "Grant db user access to app db"
  command: sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE {{ db_name }} TO {{ db_user }};"
  register: grant_result
  changed_when: grant_result.rc == 0

- name: "Allow md5 connection for the db user"
  lineinfile:
    path: "/etc/postgresql/{{ postgresql_version | default('16') }}/main/pg_hba.conf"
    line: "host    all             {{ db_user }}             0.0.0.0/0               md5"
    insertafter: EOF
  notify: restart postgres

- name: "Copy migration SQL file to remote server"
  copy:
    src: "conf/migration.sql"
    dest: "/tmp/migration.sql"
    mode: '0644'

- name: "Execute SQL migration script"
  command: sudo -u postgres psql -d {{ db_name }} -f /tmp/migration.sql
  register: migration_result
  changed_when: migration_result.rc == 0
